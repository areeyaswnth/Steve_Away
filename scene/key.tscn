[gd_scene load_steps=16 format=2]

[ext_resource path="res://assets/Chest Key/Idle/8.png" type="Texture" id=1]
[ext_resource path="res://assets/Chest Key/Idle/1.png" type="Texture" id=2]
[ext_resource path="res://assets/Chest Key/Idle/2.png" type="Texture" id=3]
[ext_resource path="res://assets/Chest Key/Idle/3.png" type="Texture" id=4]
[ext_resource path="res://assets/Chest Key/Idle/4.png" type="Texture" id=5]
[ext_resource path="res://assets/Chest Key/Idle/5.png" type="Texture" id=6]
[ext_resource path="res://assets/Chest Key/Idle/6.png" type="Texture" id=7]
[ext_resource path="res://assets/Chest Key/Idle/7.png" type="Texture" id=8]
[ext_resource path="res://script/key.gd" type="Script" id=9]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(1.0);
uniform float line_thickness : hint_range(0, 10) = 1.0;

const vec2 OFFSETS[8] = {
	vec2(-1, -1), vec2(-1, 0), vec2(-1, 1), vec2(0, -1), vec2(0, 1), 
	vec2(1, -1), vec2(1, 0), vec2(1, 1)
};

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	float outline = 0.0;
	
	for (int i = 0; i < OFFSETS.length(); i++) {
		outline += texture(TEXTURE, UV + size * OFFSETS[i]).a;
	}
	outline = min(outline, 1.0);
	
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, line_color, outline - color.a);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/line_color = Color( 1, 1, 1, 1 )
shader_param/line_thickness = 1.0

[sub_resource type="RectangleShape2D" id=1]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(1.0);
uniform float line_thickness : hint_range(0, 10) = 1.0;

const vec2 OFFSETS[8] = {
	vec2(-1, -1), vec2(-1, 0), vec2(-1, 1), vec2(0, -1), vec2(0, 1), 
	vec2(1, -1), vec2(1, 0), vec2(1, 1)
};

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	float outline = 0.0;
	
	for (int i = 0; i < OFFSETS.length(); i++) {
		outline += texture(TEXTURE, UV + size * OFFSETS[i]).a;
	}
	outline = min(outline, 1.0);
	
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, line_color, outline - color.a);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/line_color = Color( 1, 1, 1, 1 )
shader_param/line_thickness = 1.0

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 3 ), ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 7 ), ExtResource( 8 ), ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 8.0
} ]

[node name="Key" type="Area2D"]
material = SubResource( 4 )
script = ExtResource( 9 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = SubResource( 6 )
frames = SubResource( 2 )
frame = 1
playing = true
